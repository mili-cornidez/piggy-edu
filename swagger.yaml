openapi: 3.0.0
info:
  title: Piggy-Edu API
  description: API for Piggy-Edu educational platform
  version: 1.0.0
servers:
  - url: https://piggy-edu-production.up.railway.app/
    description: Production server

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  
  schemas:
    LoginRequest:
      type: object
      required:
        - wallet
        - name
      properties:
        wallet:
          type: string
          example: "0x1234567890abcdef"
          description: User's blockchain wallet address
        name:
          type: string
          example: "Alice"
          description: User's display name
    
    LoginResponse:
      type: object
      properties:
        message:
          type: string
          example: "Login successful"
        user:
          type: object
          properties:
            wallet:
              type: string
              example: "0x1234567890abcdef"
            name:
              type: string
              example: "Alice"
        token:
          type: string
          example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
    
    Level:
      type: object
      properties:
        id:
          type: integer
          example: 1
        name:
          type: string
          example: "Nivel 1"
        description:
          type: string
          example: "Introducci√≥n a las finanzas"
        questions:
          type: array
          items:
            type: object
            description: Question objects array (structure to be defined)
    
    User:
      type: object
      properties:
        wallet:
          type: string
          example: "0x1234567890abcdef"
        name:
          type: string
          example: "Alice"

    Token:
      type: object
      properties:
        id:
          type: integer
          example: 1
        name:
          type: string
          example: "NFT Nivel 1"
        address:
          type: string
          example: "0xabcdef1234567890"
    
    Error:
      type: object
      properties:
        message:
          type: string
          example: "Error message"

paths:
  /login:
    post:
      summary: User login
      description: Authenticate user with wallet address and name
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
      responses:
        '200':
          description: Login successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  
  /levels/{levelId}:
    get:
      summary: Get level data
      description: Retrieve information about a specific level
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: levelId
          required: true
          schema:
            type: integer
          description: ID of the level to retrieve
      responses:
        '200':
          description: Level data retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Level'
        '401':
          description: Unauthorized - Invalid or missing token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Level not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /tokens/{tokenId}:
    get:
      summary: Get token address
      description: Retrieve information about a specific level NFT
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: tokenId
          required: true
          schema:
            type: integer
          description: ID of the token address to retrieve
      responses:
        '200':
          description: Token address retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Token'
        '401':
          description: Unauthorized - Invalid or missing authorization token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Token not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  
  /user:
    get:
      summary: Get user data
      description: Retrieve current user's information
      security:
        - bearerAuth: []
      responses:
        '200':
          description: User data retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '401':
          description: Unauthorized - Invalid or missing token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: User not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'